{
  "stats": {
    "suites": 9,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2025-04-30T09:16:20.923Z",
    "end": "2025-04-30T09:18:01.206Z",
    "duration": 100283,
    "testsRegistered": 9,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 9,
    "hasOther": true,
    "skipped": 9,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "68753fb1-6296-4d3c-becf-17dbe0b592aa",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97b4194c-5cfe-498e-bed9-b70812337381",
          "title": "Login failed using blank all",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_all.test.js",
          "file": "\\tests\\login\\login_blank_all.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login failed using blank all\"",
              "fullTitle": "Login failed using blank all \"before each\" hook for \"Login failed using blank all\"",
              "timedOut": true,
              "duration": 10740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_all.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_all.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "95aa1d9c-51cd-411e-bbab-fa831ee93434",
              "parentUUID": "97b4194c-5cfe-498e-bed9-b70812337381",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login failed using blank all\"",
              "fullTitle": "Login failed using blank all \"after each\" hook in \"Login failed using blank all\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "f58f7d4f-1f36-4aa8-a722-15e5e1147b96",
              "parentUUID": "97b4194c-5cfe-498e-bed9-b70812337381",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login failed using blank all",
              "fullTitle": "Login failed using blank all Login failed using blank all",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "7849347b-faa0-4dc4-ad0d-760dedcb914d",
              "parentUUID": "97b4194c-5cfe-498e-bed9-b70812337381",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "7849347b-faa0-4dc4-ad0d-760dedcb914d"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "251efed6-e285-40a9-8645-2631d06add74",
          "title": "Login failed using blank password",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_password.test.js",
          "file": "\\tests\\login\\login_blank_password.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login failed using blank password\"",
              "fullTitle": "Login failed using blank password \"before each\" hook for \"Login failed using blank password\"",
              "timedOut": true,
              "duration": 10659,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_password.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_password.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "efb48909-2a2e-4295-818e-9f1780d523f7",
              "parentUUID": "251efed6-e285-40a9-8645-2631d06add74",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login failed using blank password\"",
              "fullTitle": "Login failed using blank password \"after each\" hook in \"Login failed using blank password\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "86de21fb-0908-4542-a0f4-758f13a86860",
              "parentUUID": "251efed6-e285-40a9-8645-2631d06add74",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login failed using blank password",
              "fullTitle": "Login failed using blank password Login failed using blank password",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "2af989a5-9647-473c-a90d-488546ee823f",
              "parentUUID": "251efed6-e285-40a9-8645-2631d06add74",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "2af989a5-9647-473c-a90d-488546ee823f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3e86ed3-dceb-47df-9d92-52dd03afbcc4",
          "title": "Login failed using blank username",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_username.test.js",
          "file": "\\tests\\login\\login_blank_username.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login failed using blank username\"",
              "fullTitle": "Login failed using blank username \"before each\" hook for \"Login failed using blank username\"",
              "timedOut": true,
              "duration": 10803,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_username.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_blank_username.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "1d087bc8-0963-4c83-a474-b24d1bc51bfb",
              "parentUUID": "e3e86ed3-dceb-47df-9d92-52dd03afbcc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login failed using blank username\"",
              "fullTitle": "Login failed using blank username \"after each\" hook in \"Login failed using blank username\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "7b0facda-00b8-4fd2-8d6d-ad6341ab65e6",
              "parentUUID": "e3e86ed3-dceb-47df-9d92-52dd03afbcc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login failed using blank username",
              "fullTitle": "Login failed using blank username Login failed using blank username",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "be4db893-c7b9-4824-9828-e4d667e23530",
              "parentUUID": "e3e86ed3-dceb-47df-9d92-52dd03afbcc4",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "be4db893-c7b9-4824-9828-e4d667e23530"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c6a5abc-f6a3-4413-a489-d50209caf317",
          "title": "Login success using valid credential",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_success.test.js",
          "file": "\\tests\\login\\login_success.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login success using valid credential\"",
              "fullTitle": "Login success using valid credential \"before each\" hook for \"Login success using valid credential\"",
              "timedOut": true,
              "duration": 10791,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_success.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_success.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "4e8a56c3-4dc5-4186-82fc-21db6ee62909",
              "parentUUID": "6c6a5abc-f6a3-4413-a489-d50209caf317",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login success using valid credential\"",
              "fullTitle": "Login success using valid credential \"after each\" hook in \"Login success using valid credential\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "6027f0e2-af9a-4030-9355-f66ea8e347f5",
              "parentUUID": "6c6a5abc-f6a3-4413-a489-d50209caf317",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login success using valid credential",
              "fullTitle": "Login success using valid credential Login success using valid credential",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "5fb05915-b123-4cc4-aecd-0c38560f3ab4",
              "parentUUID": "6c6a5abc-f6a3-4413-a489-d50209caf317",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "5fb05915-b123-4cc4-aecd-0c38560f3ab4"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c7e088d-31ec-4020-90db-43de42d22cc5",
          "title": "Login failed using wrong password",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_password.test.js",
          "file": "\\tests\\login\\login_wrong_password.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login failed using wrong password\"",
              "fullTitle": "Login failed using wrong password \"before each\" hook for \"Login failed using wrong password\"",
              "timedOut": true,
              "duration": 10755,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_password.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_password.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "6f97958c-7a64-408c-b78d-1945b4dffe5f",
              "parentUUID": "6c7e088d-31ec-4020-90db-43de42d22cc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login failed using wrong password\"",
              "fullTitle": "Login failed using wrong password \"after each\" hook in \"Login failed using wrong password\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "7fae54e8-2dd6-41cc-9fc4-5dfd72762259",
              "parentUUID": "6c7e088d-31ec-4020-90db-43de42d22cc5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login failed using wrong password",
              "fullTitle": "Login failed using wrong password Login failed using wrong password",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "6e208678-7070-45f9-b291-1a7d7d2b5d10",
              "parentUUID": "6c7e088d-31ec-4020-90db-43de42d22cc5",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6e208678-7070-45f9-b291-1a7d7d2b5d10"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a665605f-edba-45cd-895d-407cf5d51f0e",
          "title": "Login failed using wrong username",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_username.test.js",
          "file": "\\tests\\login\\login_wrong_username.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Login failed using wrong username\"",
              "fullTitle": "Login failed using wrong username \"before each\" hook for \"Login failed using wrong username\"",
              "timedOut": true,
              "duration": 10814,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_username.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\login\\login_wrong_username.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "e2bd871e-26d6-4737-b4d6-2fd6572ba485",
              "parentUUID": "a665605f-edba-45cd-895d-407cf5d51f0e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login failed using wrong username\"",
              "fullTitle": "Login failed using wrong username \"after each\" hook in \"Login failed using wrong username\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "60875ee9-bb35-416a-a5c2-2dc5a28a3aaa",
              "parentUUID": "a665605f-edba-45cd-895d-407cf5d51f0e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login failed using wrong username",
              "fullTitle": "Login failed using wrong username Login failed using wrong username",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "1a891873-3855-4764-ab2b-a2fb103835d7",
              "parentUUID": "a665605f-edba-45cd-895d-407cf5d51f0e",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "1a891873-3855-4764-ab2b-a2fb103835d7"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "caf3d7aa-2ad6-45e0-8cef-37ce9ce1400f",
          "title": "Retrieve all data products",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\product\\list_all_product.test.js",
          "file": "\\tests\\product\\list_all_product.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Retrieve all data products\"",
              "fullTitle": "Retrieve all data products \"before each\" hook for \"Retrieve all data products\"",
              "timedOut": true,
              "duration": 13912,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\list_all_product.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\list_all_product.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "c2816dfd-6e70-4fe8-995c-0bd670f8c403",
              "parentUUID": "caf3d7aa-2ad6-45e0-8cef-37ce9ce1400f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Retrieve all data products\"",
              "fullTitle": "Retrieve all data products \"after each\" hook in \"Retrieve all data products\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "76950262-598a-4b0d-8d24-09b5c41b4805",
              "parentUUID": "caf3d7aa-2ad6-45e0-8cef-37ce9ce1400f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Retrieve all data products",
              "fullTitle": "Retrieve all data products Retrieve all data products",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "6a4867fe-300f-4dcc-8c36-4a43b4eecb9f",
              "parentUUID": "caf3d7aa-2ad6-45e0-8cef-37ce9ce1400f",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6a4867fe-300f-4dcc-8c36-4a43b4eecb9f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "230f75cf-f98d-4a50-b85a-283cda13b928",
          "title": "Sorting all data products from Price low to high",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js",
          "file": "\\tests\\product\\sorting product.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Sorting all data products from Price low to high\"",
              "fullTitle": "Sorting all data products from Price low to high \"before each\" hook for \"Sorting all data products from Price low to high\"",
              "timedOut": true,
              "duration": 10732,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "f80b8f41-f18b-4435-928f-6680c27702d5",
              "parentUUID": "230f75cf-f98d-4a50-b85a-283cda13b928",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Sorting all data products from Price low to high\"",
              "fullTitle": "Sorting all data products from Price low to high \"after each\" hook in \"Sorting all data products from Price low to high\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "ad1712f4-ad25-431d-8b8b-c48ed66dc578",
              "parentUUID": "230f75cf-f98d-4a50-b85a-283cda13b928",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Sorting all data products from Price low to high",
              "fullTitle": "Sorting all data products from Price low to high Sorting all data products from Price low to high",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "ac230f12-6d35-419d-8854-8504c959f663",
              "parentUUID": "230f75cf-f98d-4a50-b85a-283cda13b928",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ac230f12-6d35-419d-8854-8504c959f663"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d90eb3f-11c7-4f91-8569-1bea1065ec95",
          "title": "Sorting all data products from Price High to Low",
          "fullFile": "D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js",
          "file": "\\tests\\product\\sorting product.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"Sorting all data products from Price High to Low\"",
              "fullTitle": "Sorting all data products from Price High to Low \"before each\" hook for \"Sorting all data products from Price High to Low\"",
              "timedOut": true,
              "duration": 11031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await createDriver();\n} catch (err) {\n    console.error('❌ Gagal createDriver di before hook:', err);\n    throw err;\n}",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\Osi\\Automation-sauceDemo\\tests\\product\\sorting product.test.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "a92bc6a7-56a7-4c42-8dd7-cb1810fa2fda",
              "parentUUID": "9d90eb3f-11c7-4f91-8569-1bea1065ec95",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Sorting all data products from Price High to Low\"",
              "fullTitle": "Sorting all data products from Price High to Low \"after each\" hook in \"Sorting all data products from Price High to Low\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n    try {\n        await driver.quit();\n    } catch (err) {\n        console.error('❌ Gagal quit di after hook:', err);\n        throw err;\n    }\n}",
              "err": {},
              "uuid": "380107f5-6f6b-4c87-9e50-e1352bf1a48c",
              "parentUUID": "9d90eb3f-11c7-4f91-8569-1bea1065ec95",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Sorting all data products from Price High to Low",
              "fullTitle": "Sorting all data products from Price High to Low Sorting all data products from Price High to Low",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    if(!driver) {\n        throw new Error('Driver tidak tersedia untuk pengujian!')\n    }\n    // Jalankan fungsi test yang diberikan dengan driver\n    await testFn(driver);\n} catch (error) {\n    console.error('Test failed with error:', error);\n    throw error;\n}",
              "err": {},
              "uuid": "0720f439-9399-4237-90ed-af7c0482505e",
              "parentUUID": "9d90eb3f-11c7-4f91-8569-1bea1065ec95",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "0720f439-9399-4237-90ed-af7c0482505e"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}